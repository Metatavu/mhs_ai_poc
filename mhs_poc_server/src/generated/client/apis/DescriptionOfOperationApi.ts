/* tslint:disable */
/* eslint-disable */
/**
 * DigiMHS REST API
 * This page is a interactive documentation for REST service fetching best practices for sustainable forest management published by [Tapio](https://tapio.fi/).
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime.js';
import type {
  ArticlesGet400Response,
  ArticlesGet404Response,
  ArticlesGet500Response,
  OperationDescription,
  OperationDescriptionsGet200ResponseInner,
} from '../models/index.js';
import {
    ArticlesGet400ResponseFromJSON,
    ArticlesGet400ResponseToJSON,
    ArticlesGet404ResponseFromJSON,
    ArticlesGet404ResponseToJSON,
    ArticlesGet500ResponseFromJSON,
    ArticlesGet500ResponseToJSON,
    OperationDescriptionFromJSON,
    OperationDescriptionToJSON,
    OperationDescriptionsGet200ResponseInnerFromJSON,
    OperationDescriptionsGet200ResponseInnerToJSON,
} from '../models/index.js';

export interface OperationDescriptionsGetRequest {
    langcode?: OperationDescriptionsGetLangcodeEnum;
    from?: number;
    size?: number;
}

export interface OperationDescriptionsIdGetRequest {
    id: Array<string>;
    langcode?: OperationDescriptionsIdGetLangcodeEnum;
}

export interface OperationDescriptionsSearchGetRequest {
    forestInformationStandard?: { [key: string]: string | Array<string>; };
    langcode?: OperationDescriptionsSearchGetLangcodeEnum;
}

/**
 * 
 */
export class DescriptionOfOperationApi extends runtime.BaseAPI {

    /**
     * List of Descriptions of Operation in alphabetical order.
     * List all Descriptions of Operation
     */
    async operationDescriptionsGetRaw(requestParameters: OperationDescriptionsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<OperationDescriptionsGet200ResponseInner>>> {
        const queryParameters: any = {};

        if (requestParameters['langcode'] != null) {
            queryParameters['langcode'] = requestParameters['langcode'];
        }

        if (requestParameters['from'] != null) {
            queryParameters['from'] = requestParameters['from'];
        }

        if (requestParameters['size'] != null) {
            queryParameters['size'] = requestParameters['size'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/operation-descriptions`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(OperationDescriptionsGet200ResponseInnerFromJSON));
    }

    /**
     * List of Descriptions of Operation in alphabetical order.
     * List all Descriptions of Operation
     */
    async operationDescriptionsGet(requestParameters: OperationDescriptionsGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<OperationDescriptionsGet200ResponseInner>> {
        const response = await this.operationDescriptionsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Fetch Description of Operation by given ID
     */
    async operationDescriptionsIdGetRaw(requestParameters: OperationDescriptionsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<OperationDescription>>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling operationDescriptionsIdGet().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['langcode'] != null) {
            queryParameters['langcode'] = requestParameters['langcode'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/operation-descriptions/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(OperationDescriptionFromJSON));
    }

    /**
     * Fetch Description of Operation by given ID
     */
    async operationDescriptionsIdGet(requestParameters: OperationDescriptionsIdGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<OperationDescription>> {
        const response = await this.operationDescriptionsIdGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Search Descriptions of Operation
     */
    async operationDescriptionsSearchGetRaw(requestParameters: OperationDescriptionsSearchGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<OperationDescription>>> {
        const queryParameters: any = {};

        if (requestParameters['forestInformationStandard'] != null) {
            queryParameters['forestInformationStandard'] = requestParameters['forestInformationStandard'];
        }

        if (requestParameters['langcode'] != null) {
            queryParameters['langcode'] = requestParameters['langcode'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/operation-descriptions/search`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(OperationDescriptionFromJSON));
    }

    /**
     * Search Descriptions of Operation
     */
    async operationDescriptionsSearchGet(requestParameters: OperationDescriptionsSearchGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<OperationDescription>> {
        const response = await this.operationDescriptionsSearchGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}

/**
 * @export
 */
export const OperationDescriptionsGetLangcodeEnum = {
    En: 'en',
    Fi: 'fi',
    Sv: 'sv'
} as const;
export type OperationDescriptionsGetLangcodeEnum = typeof OperationDescriptionsGetLangcodeEnum[keyof typeof OperationDescriptionsGetLangcodeEnum];
/**
 * @export
 */
export const OperationDescriptionsIdGetLangcodeEnum = {
    En: 'en',
    Fi: 'fi',
    Sv: 'sv'
} as const;
export type OperationDescriptionsIdGetLangcodeEnum = typeof OperationDescriptionsIdGetLangcodeEnum[keyof typeof OperationDescriptionsIdGetLangcodeEnum];
/**
 * @export
 */
export const OperationDescriptionsSearchGetLangcodeEnum = {
    En: 'en',
    Fi: 'fi',
    Sv: 'sv'
} as const;
export type OperationDescriptionsSearchGetLangcodeEnum = typeof OperationDescriptionsSearchGetLangcodeEnum[keyof typeof OperationDescriptionsSearchGetLangcodeEnum];
