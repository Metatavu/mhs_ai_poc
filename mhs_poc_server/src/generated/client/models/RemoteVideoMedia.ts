/* tslint:disable */
/* eslint-disable */
/**
 * DigiMHS REST API
 * This page is a interactive documentation for REST service fetching best practices for sustainable forest management published by [Tapio](https://tapio.fi/).
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { Video } from './Video.js';
import {
    VideoFromJSON,
    VideoFromJSONTyped,
    VideoToJSON,
} from './Video.js';

/**
 * 
 * @export
 * @interface RemoteVideoMedia
 */
export interface RemoteVideoMedia {
    /**
     * 
     * @type {string}
     * @memberof RemoteVideoMedia
     */
    type?: RemoteVideoMediaTypeEnum;
    /**
     * 
     * @type {Video}
     * @memberof RemoteVideoMedia
     */
    video?: Video;
}


/**
 * @export
 */
export const RemoteVideoMediaTypeEnum = {
    RemoteVideo: 'remote_video'
} as const;
export type RemoteVideoMediaTypeEnum = typeof RemoteVideoMediaTypeEnum[keyof typeof RemoteVideoMediaTypeEnum];


/**
 * Check if a given object implements the RemoteVideoMedia interface.
 */
export function instanceOfRemoteVideoMedia(value: object): boolean {
    return true;
}

export function RemoteVideoMediaFromJSON(json: any): RemoteVideoMedia {
    return RemoteVideoMediaFromJSONTyped(json, false);
}

export function RemoteVideoMediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): RemoteVideoMedia {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'video': json['video'] == null ? undefined : VideoFromJSON(json['video']),
    };
}

export function RemoteVideoMediaToJSON(value?: RemoteVideoMedia | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'video': VideoToJSON(value['video']),
    };
}

