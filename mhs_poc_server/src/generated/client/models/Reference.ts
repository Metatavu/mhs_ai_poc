/* tslint:disable */
/* eslint-disable */
/**
 * DigiMHS REST API
 * This page is a interactive documentation for REST service fetching best practices for sustainable forest management published by [Tapio](https://tapio.fi/).
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { Langcode } from './Langcode.js';
import {
    LangcodeFromJSON,
    LangcodeFromJSONTyped,
    LangcodeToJSON,
} from './Langcode.js';

/**
 * References are used in contents to let readers to check sources. References are used as inline 'cite' HTML tag references within the body texts.
 * @export
 * @interface Reference
 */
export interface Reference {
    /**
     * 
     * @type {string}
     * @memberof Reference
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof Reference
     */
    text?: string;
    /**
     * 
     * @type {string}
     * @memberof Reference
     */
    url?: string;
    /**
     * 
     * @type {Langcode}
     * @memberof Reference
     */
    langcode?: Langcode;
}

/**
 * Check if a given object implements the Reference interface.
 */
export function instanceOfReference(value: object): boolean {
    return true;
}

export function ReferenceFromJSON(json: any): Reference {
    return ReferenceFromJSONTyped(json, false);
}

export function ReferenceFromJSONTyped(json: any, ignoreDiscriminator: boolean): Reference {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'text': json['text'] == null ? undefined : json['text'],
        'url': json['url'] == null ? undefined : json['url'],
        'langcode': json['langcode'] == null ? undefined : LangcodeFromJSON(json['langcode']),
    };
}

export function ReferenceToJSON(value?: Reference | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'text': value['text'],
        'url': value['url'],
        'langcode': LangcodeToJSON(value['langcode']),
    };
}

