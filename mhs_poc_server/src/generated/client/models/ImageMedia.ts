/* tslint:disable */
/* eslint-disable */
/**
 * DigiMHS REST API
 * This page is a interactive documentation for REST service fetching best practices for sustainable forest management published by [Tapio](https://tapio.fi/).
 *
 * The version of the OpenAPI document: 2.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime.js';
import type { ImageMediaAllOfImage } from './ImageMediaAllOfImage.js';
import {
    ImageMediaAllOfImageFromJSON,
    ImageMediaAllOfImageFromJSONTyped,
    ImageMediaAllOfImageToJSON,
} from './ImageMediaAllOfImage.js';

/**
 * 
 * @export
 * @interface ImageMedia
 */
export interface ImageMedia {
    /**
     * 
     * @type {string}
     * @memberof ImageMedia
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageMedia
     */
    type?: ImageMediaTypeEnum;
    /**
     * 
     * @type {ImageMediaAllOfImage}
     * @memberof ImageMedia
     */
    image?: ImageMediaAllOfImage;
}


/**
 * @export
 */
export const ImageMediaTypeEnum = {
    Image: 'image'
} as const;
export type ImageMediaTypeEnum = typeof ImageMediaTypeEnum[keyof typeof ImageMediaTypeEnum];


/**
 * Check if a given object implements the ImageMedia interface.
 */
export function instanceOfImageMedia(value: object): boolean {
    return true;
}

export function ImageMediaFromJSON(json: any): ImageMedia {
    return ImageMediaFromJSONTyped(json, false);
}

export function ImageMediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ImageMedia {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : json['type'],
        'image': json['image'] == null ? undefined : ImageMediaAllOfImageFromJSON(json['image']),
    };
}

export function ImageMediaToJSON(value?: ImageMedia | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'type': value['type'],
        'image': ImageMediaAllOfImageToJSON(value['image']),
    };
}

